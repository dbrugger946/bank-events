



quarkus.kubernetes-client.trust-certs=true

quarkus.openshift.build-strategy=docker
quarkus.native.container-build=true

# quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7

# quarkus.http.port=9090

quarkus.swagger-ui.always-include=true

quarkus.openshift.route.expose=true

quarkus.openshift.name=customer-event-analysis

quarkus.test.continuous-testing=disabled

# DEV Configure the Kafka sink (we write to it)
%dev.mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=localhost:9092 
%dev.mp.messaging.outgoing.kogito_outgoing_stream.group.id=customer-event-analysis
%dev.mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
%dev.mp.messaging.outgoing.kogito_outgoing_stream.topic=offer-output-stream
%dev.mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# DEV Configure the Kafka source (we read from it)
%dev.mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.kogito_incoming_stream.group.id=customer-event-analysis
%dev.mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
%dev.mp.messaging.incoming.kogito_incoming_stream.topic=event-input-stream
%dev.mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# PROD Configure the Kafka sink (we write to it)
%prod.mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%prod.mp.messaging.outgoing.kogito_outgoing_stream.group.id=customer-event-analysis
%prod.mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
%prod.mp.messaging.outgoing.kogito_outgoing_stream.topic=offer-output-stream
%prod.mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# PROD Configure the Kafka source (we read from it)
%prod.mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=my-cluster-kafka-bootstrap:9092
%prod.mp.messaging.incoming.kogito_incoming_stream.group.id=customer-event-analysis
%prod.mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
%pord.mp.messaging.incoming.kogito_incoming_stream.topic=event-input-stream
%prod.mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.kogito_incoming_stream.broadcast=true




